datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  hassPassword  String? 
  accounts      Account[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
   reviews      Review[]
   blogs   Blog[]
}
 
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model Blog{
   id        String  @id @default(auto()) @map("_id") @db.ObjectId
   userId        String  @db.ObjectId
   title  String
   description String
   category String
   images String
   reviews Review[]
   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Review{
   id            String  @id @default(auto()) @map("_id") @db.ObjectId
   userId        String  @db.ObjectId
   blogId      String  @db.ObjectId
   comment  String
   createdAt    DateTime @default(now())
   blog    Blog @relation(fields: [blogId], references: [id])
   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
 

 
